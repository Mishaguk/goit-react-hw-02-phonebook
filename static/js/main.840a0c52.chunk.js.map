{"version":3,"sources":["transitions/Slide.module.css","components/ContactForm/PhonebookEditor.module.css","components/Phonebook/Phonebook.module.css","components/App.module.css","components/ContactForm/ContactForm.js","components/Phonebook/Phonebook.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["module","exports","toastr","options","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","undefined","props","items","find","currentContact","onAddContact","warning","this","className","styles","PhonebookEditor","onSubmit","type","onChange","pattern","title","required","PhonebookEditorButton","Component","Phonebook","onDeleteContacts","PhonebookText","button","onClick","PhonebookList","TransitionGroup","component","map","item","CSSTransition","timeout","unmountOnExit","classNames","slide","id","Filter","onChangeFilter","placeholder","App","contacts","filter","isLoaded","changeFilter","addContact","contact","contactToAdd","shortid","generate","deleteContact","contactToCheck","fromLS","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","toLowerCase","includes","filterContacts","in","css","PhonebookStyles","onCheckContact","ContactList","reactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.840a0c52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Slide_enter__1U4in\",\"enterActive\":\"Slide_enterActive__1D4-g\",\"exit\":\"Slide_exit__3TsdN\",\"exitActive\":\"Slide_exitActive__29-Ig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhonebookEditor\":\"PhonebookEditor_PhonebookEditor__36z_I\",\"PhonebookEditorButton\":\"PhonebookEditor_PhonebookEditorButton__1Nj11\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Phonebook_button__2bpJ8\",\"PhonebookText\":\"Phonebook_PhonebookText__1qO11\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhonebookStyles\":\"App_PhonebookStyles__rsQtV\"};","import React, { Component } from 'react';\r\nimport styles from './PhonebookEditor.module.css';\r\nimport toastr, { warning } from 'toastr';\r\nimport 'toastr/build/toastr.min.css';\r\n\r\ntoastr.options = {\r\n\tcloseButton: false,\r\n\tdebug: false,\r\n\tnewestOnTop: true,\r\n\tprogressBar: false,\r\n\tpositionClass: 'toast-top-right',\r\n\tpreventDuplicates: false,\r\n\tonclick: null,\r\n\tshowDuration: '300',\r\n\thideDuration: '1000',\r\n\ttimeOut: '5000',\r\n\textendedTimeOut: '1000',\r\n\tshowEasing: 'swing',\r\n\thideEasing: 'linear',\r\n\tshowMethod: 'fadeIn',\r\n\thideMethod: 'fadeOut',\r\n};\r\n\r\nexport default class ContactForm extends Component {\r\n\tstate = {\r\n\t\tname: '',\r\n\t\tnumber: '',\r\n\t};\r\n\r\n\thandleChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t\t[e.target.number]: e.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tthis.props.items.find(\r\n\t\t\tcurrentContact => currentContact.name === this.state.name\r\n\t\t) === undefined\r\n\t\t\t? this.props.onAddContact({ ...this.state })\r\n\t\t\t: toastr.warning(`${this.state.name} is already in contacts`);\r\n\r\n\t\tthis.setState({\r\n\t\t\tname: '',\r\n\t\t\tnumber: '',\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { name, number } = this.state;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<form className={styles.PhonebookEditor} onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<h2>Name</h2>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n\t\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<h2>Number</h2>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='tel'\r\n\t\t\t\t\t\tname='number'\r\n\t\t\t\t\t\tvalue={number}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tpattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n\t\t\t\t\t\ttitle='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<button className={styles.PhonebookEditorButton} type='submit'>\r\n\t\t\t\t\t\tAdd contact\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Phonebook.module.css';\r\n\r\nconst Phonebook = ({ name, number, onDeleteContacts }) => (\r\n\t<div>\r\n\t\t<p className={styles.PhonebookText}>\r\n\t\t\t{name} : {number}\r\n\t\t\t<button\r\n\t\t\t\ttype='button'\r\n\t\t\t\tclassName={styles.button}\r\n\t\t\t\tonClick={onDeleteContacts}\r\n\t\t\t>\r\n\t\t\t\tDelete\r\n\t\t\t</button>\r\n\t\t</p>\r\n\t</div>\r\n);\r\n\r\nexport default Phonebook;\r\n\r\nPhonebook.propTypes = {\r\n\tname: PropTypes.string.isRequired,\r\n\tnumber: PropTypes.string.isRequired,\r\n\tonDeleteContacts: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Phonebook from '../Phonebook/Phonebook';\r\nimport slide from '../../transitions/Slide.module.css';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport './List.css';\r\n\r\nconst PhonebookList = ({ items, onDeleteContacts }) => (\r\n\t<TransitionGroup component='ul' className='list'>\r\n\t\t{items.map(item => (\r\n\t\t\t<CSSTransition\r\n\t\t\t\tkey={item.id}\r\n\t\t\t\ttimeout={500}\r\n\t\t\t\tunmountOnExit\r\n\t\t\t\tclassNames={slide}\r\n\t\t\t>\r\n\t\t\t\t<li className='list-item' key={item.id}>\r\n\t\t\t\t\t<Phonebook\r\n\t\t\t\t\t\t{...item}\r\n\t\t\t\t\t\tonDeleteContacts={() => {\r\n\t\t\t\t\t\t\tonDeleteContacts(item.id);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</li>\r\n\t\t\t</CSSTransition>\r\n\t\t))}\r\n\t</TransitionGroup>\r\n);\r\n\r\nPhonebookList.propTypes = {\r\n\titems: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.string.isRequired,\r\n\t\t}).isRequired\r\n\t).isRequired,\r\n\tonDeleteContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PhonebookList;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n\t<input\r\n\t\ttype='text'\r\n\t\tplaceholder='Type to filter contacts'\r\n\t\tvalue={value}\r\n\t\tonChange={onChangeFilter}\r\n\t></input>\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport shortid from 'shortid';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\nimport css from './App.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport slide from '../transitions/Slide.module.css';\r\n\r\nconst filterContacts = (contacts, filter) => {\r\n\treturn contacts.filter(contact =>\r\n\t\tcontact.name.toLowerCase().includes(filter.toLowerCase())\r\n\t);\r\n};\r\n\r\nexport default class App extends Component {\r\n\tstate = {\r\n\t\tcontacts: [],\r\n\t\tfilter: '',\r\n\t\tisLoaded: null,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({ isLoaded: true });\r\n\r\n\t\tconst fromLS = localStorage.getItem('contacts');\r\n\t\tif (fromLS) {\r\n\t\t\tconst contacts = JSON.parse(fromLS);\r\n\r\n\t\t\tthis.setState({ contacts: contacts });\r\n\t\t}\r\n\t}\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (prevState.contacts !== this.state.contacts) {\r\n\t\t\tlocalStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n\t\t}\r\n\t}\r\n\r\n\tchangeFilter = e => {\r\n\t\tthis.setState({ filter: e.target.value });\r\n\t};\r\n\r\n\taddContact = contact => {\r\n\t\tconst contactToAdd = {\r\n\t\t\t...contact,\r\n\t\t\tid: shortid.generate(),\r\n\t\t};\r\n\r\n\t\tthis.setState(state => ({\r\n\t\t\tcontacts: [...state.contacts, contactToAdd],\r\n\t\t}));\r\n\t};\r\n\r\n\tdeleteContact = id => {\r\n\t\tthis.setState(state => ({\r\n\t\t\tcontacts: state.contacts.filter(contact => contact.id !== id),\r\n\t\t}));\r\n\t};\r\n\tcontactToCheck = contact => {\r\n\t\tthis.state.contacts.find(\r\n\t\t\tcurrentContact => currentContact.name === contact.name\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { contacts, filter, isLoaded } = this.state;\r\n\r\n\t\tconst filteredContacts = filterContacts(contacts, filter);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<CSSTransition\r\n\t\t\t\t\tin={isLoaded}\r\n\t\t\t\t\tclassNames={slide}\r\n\t\t\t\t\ttimeout={500}\r\n\t\t\t\t\tunmountOnExit\r\n\t\t\t\t>\r\n\t\t\t\t\t<h1 className={css.PhonebookStyles}>Phonebook</h1>\r\n\t\t\t\t</CSSTransition>\r\n\t\t\t\t<ContactForm\r\n\t\t\t\t\titems={filteredContacts}\r\n\t\t\t\t\tonAddContact={this.addContact}\r\n\t\t\t\t\tonCheckContact={this.contactToCheck}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<h2>Contacts</h2>\r\n\t\t\t\t<Filter value={filter} onChangeFilter={this.changeFilter} />\r\n\t\t\t\t<ContactList\r\n\t\t\t\t\titems={filteredContacts}\r\n\t\t\t\t\tonDeleteContacts={this.deleteContact}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\nimport reactDOM from 'react-dom';\nimport App from './components/App';\n\nreactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}